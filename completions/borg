# Auto-generated with h2o

_borg()
{
    local cur prev words cword
    _init_completion -s || return

    local cmd i subcommands
    local subcommands=" benchmark break-lock check compact config create debug delete diff export-tar extract info init key list mount prune recreate rename serve umount upgrade with-lock import-tar"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        benchmark) _borg_benchmark
            return
            ;;

        break-lock) _borg_breaklock
            return
            ;;

        check) _borg_check
            return
            ;;

        compact) _borg_compact
            return
            ;;

        config) _borg_config
            return
            ;;

        create) _borg_create
            return
            ;;

        debug) _borg_debug
            return
            ;;

        delete) _borg_delete
            return
            ;;

        diff) _borg_diff
            return
            ;;

        export-tar) _borg_exporttar
            return
            ;;

        extract) _borg_extract
            return
            ;;

        info) _borg_info
            return
            ;;

        init) _borg_init
            return
            ;;

        key) _borg_key
            return
            ;;

        list) _borg_list
            return
            ;;

        mount) _borg_mount
            return
            ;;

        prune) _borg_prune
            return
            ;;

        recreate) _borg_recreate
            return
            ;;

        rename) _borg_rename
            return
            ;;

        serve) _borg_serve
            return
            ;;

        umount) _borg_umount
            return
            ;;

        upgrade) _borg_upgrade
            return
            ;;

        with-lock) _borg_withlock
            return
            ;;

        import-tar) _borg_importtar
            return
            ;;

    esac

    local word_list=" benchmark break-lock check compact config create debug delete diff export-tar extract info init key list mount prune recreate rename serve umount upgrade with-lock import-tar -V --version -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_benchmark()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_breaklock()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_check()
{
    local word_list="  --repository-only --archives-only --verify-data --repair --save-space --max-duration -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_compact()
{
    local word_list="  --cleanup-commits --threshold -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_config()
{
    local word_list="  -c --cache -d --delete -l --list -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_create()
{
    local word_list="  -n --dry-run -s --stats --list --filter --json --no-cache-sync --stdin-name --stdin-user --stdin-group --stdin-mode --content-from-command --paths-from-stdin --paths-from-command --paths-delimiter -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --exclude-caches --exclude-if-present --keep-exclude-tags --exclude-nodump -x --one-file-system --numeric-owner --numeric-ids --noatime --atime --noctime --nobirthtime --nobsdflags --noflags --noacls --noxattrs --sparse --files-cache --read-special --comment --timestamp -c --checkpoint-interval --chunker-params -C --compression"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug()
{
    local cmd i subcommands
    local subcommands=" info dump-archive-items dump-archive dump-manifest dump-repo-objs search-repo-objs get-obj put-obj delete-obj refcount-obj dump-hints convert-profile"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        info) _borg_debug_info
            return
            ;;

        dump-archive-items) _borg_debug_dumparchiveitems
            return
            ;;

        dump-archive) _borg_debug_dumparchive
            return
            ;;

        dump-manifest) _borg_debug_dumpmanifest
            return
            ;;

        dump-repo-objs) _borg_debug_dumprepoobjs
            return
            ;;

        search-repo-objs) _borg_debug_searchrepoobjs
            return
            ;;

        get-obj) _borg_debug_getobj
            return
            ;;

        put-obj) _borg_debug_putobj
            return
            ;;

        delete-obj) _borg_debug_deleteobj
            return
            ;;

        refcount-obj) _borg_debug_refcountobj
            return
            ;;

        dump-hints) _borg_debug_dumphints
            return
            ;;

        convert-profile) _borg_debug_convertprofile
            return
            ;;

    esac

    local word_list=" info dump-archive-items dump-archive dump-manifest dump-repo-objs search-repo-objs get-obj put-obj delete-obj refcount-obj dump-hints convert-profile -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_info()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_dumparchiveitems()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_dumparchive()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_dumpmanifest()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_dumprepoobjs()
{
    local word_list="  --ghost --segment --offset -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_searchrepoobjs()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_getobj()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_putobj()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_deleteobj()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_refcountobj()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_dumphints()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_debug_convertprofile()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_delete()
{
    local word_list="  -n --dry-run --list -s --stats --cache-only --force --keep-security-info --save-space -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_diff()
{
    local word_list="  --numeric-owner --numeric-ids --same-chunker-params --sort --json-lines -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_exporttar()
{
    local word_list="  --tar-filter --list -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --strip-components"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_extract()
{
    local word_list="  --list -n --dry-run --numeric-owner --numeric-ids --nobsdflags --noflags --noacls --noxattrs --stdout --sparse -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --strip-components"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_info()
{
    local word_list="  --json -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_init()
{
    local word_list="  -e --encryption --append-only --storage-quota --make-parent-dirs -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_key()
{
    local cmd i subcommands
    local subcommands=" export import change-passphrase migrate-to-repokey"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        export) _borg_key_export
            return
            ;;

        import) _borg_key_import
            return
            ;;

        change-passphrase) _borg_key_changepassphrase
            return
            ;;

        migrate-to-repokey) _borg_key_migratetorepokey
            return
            ;;

    esac

    local word_list=" export import change-passphrase migrate-to-repokey -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_key_export()
{
    local word_list="  --paper --qr-html -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_key_import()
{
    local word_list="  --paper -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_key_changepassphrase()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_key_migratetorepokey()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_list()
{
    local word_list="  --consider-checkpoints --short --format --json --json-lines -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last -e --exclude --exclude-from --pattern --patterns-from"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_mount()
{
    local word_list="  --consider-checkpoints -f --foreground -o --numeric-owner --numeric-ids -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last -e --exclude --exclude-from --pattern --patterns-from --strip-components"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_prune()
{
    local word_list="  -n --dry-run --force -s --stats --list --keep-within --keep-last --keep-secondly --keep-minutely -H --keep-hourly -d --keep-daily -w --keep-weekly -m --keep-monthly -y --keep-yearly --save-space -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_recreate()
{
    local word_list="  --list --filter -n --dry-run -s --stats -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --exclude-caches --exclude-if-present --keep-exclude-tags --target -c --checkpoint-interval --comment --timestamp -C --compression --recompress --chunker-params"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_rename()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_serve()
{
    local word_list="  --restrict-to-path --restrict-to-repository --append-only --storage-quota -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_umount()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_upgrade()
{
    local word_list="  -n --dry-run --inplace --force --tam --disable-tam -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_withlock()
{
    local word_list="  -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_borg_importtar()
{
    local word_list="  --tar-filter -s --stats --list --filter --json -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh --comment --timestamp -c --checkpoint-interval --chunker-params -C --compression"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _borg borg
