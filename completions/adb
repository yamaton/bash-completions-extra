# Auto-generated with h2o

_adb()
{
    local cur prev words cword
    _init_completion -s || return

    local cmd i subcommands
    local subcommands=" devices help version connect diconnect forward ppp reverse push pull sync shell emu install install-multiple install-multi-package uninstall bugreport jdwp logcat disable-verify enable-verify keygen wait-for-device wait-for-usb-device wait-for-local-device wait-for-recovery wait-for-usb-recovery wait-for-local-recovery wait-for-sideload wait-for-usb-sideload wait-for-local-sideload wait-for-bootloader wait-for-usb-bootloader wait-for-local-bootloader get-state get-serialno get-devpath remount reboot sideload root unroot usb tcpip start-server kill-server reconnect"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        devices) _adb_devices
            return
            ;;

        help) _adb_help
            return
            ;;

        version) _adb_version
            return
            ;;

        connect) _adb_connect
            return
            ;;

        diconnect) _adb_diconnect
            return
            ;;

        forward) _adb_forward
            return
            ;;

        ppp) _adb_ppp
            return
            ;;

        reverse) _adb_reverse
            return
            ;;

        push) _adb_push
            return
            ;;

        pull) _adb_pull
            return
            ;;

        sync) _adb_sync
            return
            ;;

        shell) _adb_shell
            return
            ;;

        emu) _adb_emu
            return
            ;;

        install) _adb_install
            return
            ;;

        install-multiple) _adb_installmultiple
            return
            ;;

        install-multi-package) _adb_installmultipackage
            return
            ;;

        uninstall) _adb_uninstall
            return
            ;;

        bugreport) _adb_bugreport
            return
            ;;

        jdwp) _adb_jdwp
            return
            ;;

        logcat) _adb_logcat
            return
            ;;

        disable-verify) _adb_disableverify
            return
            ;;

        enable-verify) _adb_enableverify
            return
            ;;

        keygen) _adb_keygen
            return
            ;;

        wait-for-device) _adb_waitfordevice
            return
            ;;

        wait-for-usb-device) _adb_waitforusbdevice
            return
            ;;

        wait-for-local-device) _adb_waitforlocaldevice
            return
            ;;

        wait-for-recovery) _adb_waitforrecovery
            return
            ;;

        wait-for-usb-recovery) _adb_waitforusbrecovery
            return
            ;;

        wait-for-local-recovery) _adb_waitforlocalrecovery
            return
            ;;

        wait-for-sideload) _adb_waitforsideload
            return
            ;;

        wait-for-usb-sideload) _adb_waitforusbsideload
            return
            ;;

        wait-for-local-sideload) _adb_waitforlocalsideload
            return
            ;;

        wait-for-bootloader) _adb_waitforbootloader
            return
            ;;

        wait-for-usb-bootloader) _adb_waitforusbbootloader
            return
            ;;

        wait-for-local-bootloader) _adb_waitforlocalbootloader
            return
            ;;

        get-state) _adb_getstate
            return
            ;;

        get-serialno) _adb_getserialno
            return
            ;;

        get-devpath) _adb_getdevpath
            return
            ;;

        remount) _adb_remount
            return
            ;;

        reboot) _adb_reboot
            return
            ;;

        sideload) _adb_sideload
            return
            ;;

        root) _adb_root
            return
            ;;

        unroot) _adb_unroot
            return
            ;;

        usb) _adb_usb
            return
            ;;

        tcpip) _adb_tcpip
            return
            ;;

        start-server) _adb_startserver
            return
            ;;

        kill-server) _adb_killserver
            return
            ;;

        reconnect) _adb_reconnect
            return
            ;;

    esac

    local word_list=" devices help version connect diconnect forward ppp reverse push pull sync shell emu install install-multiple install-multi-package uninstall bugreport jdwp logcat disable-verify enable-verify keygen wait-for-device wait-for-usb-device wait-for-local-device wait-for-recovery wait-for-usb-recovery wait-for-local-recovery wait-for-sideload wait-for-usb-sideload wait-for-local-sideload wait-for-bootloader wait-for-usb-bootloader wait-for-local-bootloader get-state get-serialno get-devpath remount reboot sideload root unroot usb tcpip start-server kill-server reconnect "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_devices()
{
    local word_list="  -l"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_help()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_version()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_connect()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_diconnect()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_forward()
{
    local word_list="  --list --no-rebind --remove --remove-all"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_ppp()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_reverse()
{
    local word_list="  --list --no-rebind --remove --remove-all"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_push()
{
    local word_list="  --sync"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_pull()
{
    local word_list="  -a"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_sync()
{
    local word_list="  -l"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_shell()
{
    local word_list="  -e -n -T -t -x"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_emu()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_install()
{
    local word_list="  -l -r -t -s -d -p -g --instant --no-streaming --streaming --fastdeploy --no-fastdeploy --force-agent --date-check-agent --version-check-agent --local-agent"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_installmultiple()
{
    local word_list="  -l -r -t -s -d -p -g --instant --no-streaming --streaming --fastdeploy --no-fastdeploy --force-agent --date-check-agent --version-check-agent --local-agent"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_installmultipackage()
{
    local word_list="  -l -r -t -s -d -p -g --instant --no-streaming --streaming --fastdeploy --no-fastdeploy --force-agent --date-check-agent --version-check-agent --local-agent"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_uninstall()
{
    local word_list="  -k"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_bugreport()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_jdwp()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_logcat()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_disableverify()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_enableverify()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_keygen()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitfordevice()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforusbdevice()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforlocaldevice()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforrecovery()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforusbrecovery()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforlocalrecovery()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforsideload()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforusbsideload()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforlocalsideload()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforbootloader()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforusbbootloader()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_waitforlocalbootloader()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_getstate()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_getserialno()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_getdevpath()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_remount()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_reboot()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_sideload()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_root()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_unroot()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_usb()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_tcpip()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_startserver()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_killserver()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_reconnect()
{
    local cmd i subcommands
    local subcommands=" device offline"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        device) _adb_reconnect_device
            return
            ;;

        offline) _adb_reconnect_offline
            return
            ;;

    esac

    local word_list=" device offline "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_reconnect_device()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_adb_reconnect_offline()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _adb adb
